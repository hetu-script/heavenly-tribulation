import 'common.ht'
import '../character/status_effect.ht'
import '../common.ht'

// 游戏效果的处理函数
final gEffectHandlers = {
  // 食用类效果
  // 回复体力
  restoreStamina: (effect, character) {
    entityStaminaChange(character, effect.values[0].value)
  },
  // 回复生命
  restoreLife: (effect, character) {
    entityLifeChange(character, effect.values[0].value)
  },
  // 回复元气
  restoreMana: (effect, character) {
    entityManaChange(character, effect.values[0].value)
  },
  // 回复精神
  restoreSpirit: (effect, character) {
    entitySpiritChange(character, effect.values[0].value)
  },
  // 治疗外伤
  healInjury: (effect, character) {
    final currentInjury = character.statusEffects[kStatusCategoryInjury]
    if (currentInjury) {
      currentInjury.value -= effect.values[0].value
      if (currentInjury.value <= 0) {
        delete character.statusEffects[kStatusCategoryInjury]
      }
    }
  },
  // 治疗感染
  healInfection: (effect, character) {
    final currentInfection = character.statusEffects[kStatusCategoryInfection]
    if (currentInfection) {
      currentInfection.value -= effect.values[0].value
      if (currentInfection.value <= 0) {
        delete character.statusEffects[kStatusCategoryInfection]
      }
    }
  },
  // 分担伤害
  decreaseDamage: (effect, baseDamage) {
    return baseDamage * effect.values[0].value
  },
  decreaseDamageOnCooldown: (effect, baseDamage) {
    if (!effect.inCooldown) {
      effect.inCooldown = true
      effect.cooldown = effect.values[1].value
      return baseDamage * effect.values[0].value
    }
  },
  // 增加伤害
  addDamageOnCooldown: (effect) {
    if (!effect.inCooldown) {
      effect.inCooldown = true
      effect.cooldown = effect.values[1].value
      return effect.values[0].value
    }
  },
  // 攻击后
  counterOnCooldown: (effect, targetInfo) {
    if (!effect.inCooldown) {
      effect.inCooldown = true
      effect.cooldown = effect.values[1].value
      targetInfo.ticks -= 10
    }
  }
}
