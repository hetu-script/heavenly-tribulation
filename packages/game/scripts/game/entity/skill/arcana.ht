import '../../name/skill.ht'
import '../common.ht'
import '../../game.ht'
import 'common.ht'
import '../item/common.ht'
import '../effect/common.ht'

/// 内功，主技能，包含各种增强基础属性和资源的效果
struct Arcana {
  construct ({
    name,
    rarity,
    icon,
    creatorId,
    createdTime,
    description,
    kind,
    level,
    levelMax,
    attributes,
  }) {
    this.name = name
    this.rarity = rarity ?? kCommon
    if (!this.name) {
      final nameLength = kRarity[this.rarity].level > 4 ? 3 : kRarity[this.rarity].level > 2 ? 2 : 1
      final randomName = generateSkillName(category: 'arcana', length: nameLength)
      this.name = randomName.name
    }
    this.color = kRarity[this.rarity].color
    // 稀有度决定难度，也就是升级需要的经验值的数量，同时也决定最大效果条数
    this.difficulty = kRarity[this.rarity].level

    this.entityType = kEntityTypeSkill // 人物、地点、物品、技能等等
    this.category = kEntityCategoryArcana // 武器、防护、斗技、玄功等等
    this.kind = 'arcana'

    this.creatorId = creatorId
    this.createdTime = createdTime
    this.description = description ?? ''
    this.id = '${this.entityType}.${Hash.uid4(2)}.${this.name}'

    this.isEquippable = true
    this.equipType = kEquipTypeArcana // 装备类型：进攻、如果没有就是不可装备

    this.icon = 'icon/skill/arcane_0.png'
    
    this.cost = {
      // 练习时每个tick的消耗
      practice: {
        spirit: 1,
      },
    }

    this.attributes = {
      effects: {},
    }
    if (attributes) {
      this.attributes.assign(attributes)
    }

    this.attributes.effects = getEffects(category: this.kind, count: this.difficulty + 1)

    for (final effect of this.attributes.effects) {
      initEffectData(effect, this.difficulty, kSkillInitialEfficiency)
    }

    // 在此物品上装备的支持性对象
    this.equippedSupports = []

    calculateSkillStats(this)
  }
}
