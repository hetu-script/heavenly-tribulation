import '../../name/skill.ht'
import '../common.ht'
import '../../game.ht'
import 'common.ht'
import '../item/common.ht'
import '../effect/common.ht'

/// 内功，主要包含增强基础属性和资源的效果
struct Arcana {
  construct ({
    name,
    rarity,
    icon,
    creatorId,
    createdTime,
    description,
    kind,
    difficulty,
    level,
    levelMax,
    attributes,
  }) {
    this.name = name
    this.rarity = rarity ?? kCommon
    if (!this.name) {
      final nameLength = kRarity[this.rarity].level > 4 ? 3 : kRarity[this.rarity].level > 2 ? 2 : 1
      final randomName = generateSkillName(category: 'arcana', length: nameLength)
      this.name = randomName.name
    }
    this.color = kRarity[this.rarity].color

    this.entityType = kEntityTypeSkill // 人物、地点、物品、技能等等
    this.category = kEntityCategoryArcana // 武器、防护、斗技、玄功等等
    this.kind = 'arcana'

    this.creatorId = creatorId
    this.createdTime = createdTime
    this.description = description ?? ''
    this.id = '${this.entityType}.${Hash.uid4(2)}.${this.name}'

    this.isEquippable = true
    this.equipType = kEquipTypeArcana // 装备类型：进攻、如果没有就是不可装备

    this.icon = 'icon/skill/arcane_0.png'

    // 难度，升级需要的经验值的数量
    this.difficulty = difficulty ?? 1
    // 技能等级，提升等级需要练习
    // 刚学会时是-1级，此时无法装备
    this.level = level ?? -1
    // 此技能最大等级，注意技能最大等级和其对应的效果的最大等级无关
    this.levelMax = levelMax ?? 0
    this.exp = 0 // 当前经验值
    this.expForNextLevel = expForLevel(this.difficulty, this.level + 1) // 下一等级需要的经验值

    this.cost = {
      // 练习时每个tick的消耗
      practice: {
        spirit: 1,
      },
    }

    if (attributes) {
      this.attributes.assign(attributes)
    }
    // -1级技能也显示0级技能的效果
    this.attributes.effects = {}
    final effect = getEffect(category: this.kind, level: this.level >= 0 ? this.level : 0)
    this.attributes.effects[effect.id] = effect

    // 在此物品上装备的支持性对象
    this.equippedSupports = []

    calculateSkillStats(this)
  }
}
