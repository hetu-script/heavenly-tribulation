import '../generator/name/name.ht' as nameGenerator
import 'constants.ht'

const kItemDefaultIcon = 'assets/images/unknown_item.png'
final kDamageTypes = [
  'slashing',
  'bludgeoning',
  'piercing',
  'cold',
  'fire',
  'lightning',
  'chi',
  'spell',
  'power',
]

struct Item {
  construct weapon({
    name,
    rarity,
    value,
    icon,
    equippable,
    creatorId,
    createdTime,
    description,
    inscription,
    attributes,
  }) {
    this.name = name
    this.category = 'weapon'
    this.rarity = rarity
    this.value = value ?? 0
    this.icon = icon ?? 'assets/images/item/weapon.png'
    this.consumable = false
    this.equippable = equippable
    this.creatorId = creatorId
    this.createdTime = createdTime
    this.description = description
    this.inscription = inscription
    this.attributes = attributes
    
    if (!this.name) {
      final r = nameGenerator.getTalisman(1, category: this.category, rarity: this.rarity).first
      this.name = r.name
      this.rarity ??= r.rarity
      this.category ??= r.category
    }
    this.id = 'item_${Hash.uid4(2)}_${this.name}'

    if (!this.attributes) {
      this.attributes = {
        attack: 
        speed: 
        damageType: kDamageTypes.random
      }
    }
    this.stats = {}
  }

  construct consumable({
    name,
    rarity,
    value,
    icon,
    equippable,
    creatorId,
    createdTime,
    description,
    inscription,
    attributes,
  }) {
    this.name = name
    this.rarity = rarity
    this.value = value ?? 0
    this.icon = icon ?? kItemDefaultIcon
    this.consumable = true
    this.equippable = false
    this.creatorId = creatorId
    this.createdTime = createdTime
    this.description = description
    this.inscription = inscription
    this.attributes = attributes
    
    if (!this.name) {
      final r = nameGenerator.getAlchemy(1, rarity: this.rarity).first
      this.name = r.name
      this.rarity ??= r.rarity
    }
    this.id = 'item_${Hash.uid4(2)}_${this.name}'
  }
}
