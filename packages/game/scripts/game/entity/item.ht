import '../game.ht'
import '../generator/name/name.ht' as nameGenerator
import '../generator/name/constants.ht'

const kItemDefaultIcon = 'assets/images/unknown_item.png'

struct Item {
  fun checkAttributes {
  }

  construct equipment({
    name,
    category,
    rarity,
    value,
    icon,
    equippable,
    creatorId,
    createdTime,
    description,
    inscription,
    stats,
  }) {
    this.name = name
    this.category = category
    this.rarity = rarity
    this.value = value ?? 0
    this.icon = icon ?? kItemDefaultIcon
    this.consumable = false
    this.equippable = equippable
    this.creatorId = creatorId
    this.createdTime = createdTime ?? game.timestamp
    this.description = description
    this.inscription = inscription
    this.stats = stats
    
    if (!this.name) {
      final r = nameGenerator.getTalisman(1, category: this.category, rarity: this.rarity).first
      this.name = r.name
      this.rarity ??= r.rarity
      this.category ??= r.category
    }

    if (this.category == 'attack') {
      
    }

    this.id = 'item_${Hash.uid4(2)}_${this.name}'
  }

  construct consumable({
    name,
    rarity,
    value,
    icon,
    equippable,
    creatorId,
    createdTime,
    description,
    inscription,
    stats,
  }) {
    this.name = name
    this.rarity = rarity
    this.value = value ?? 0
    this.icon = icon ?? kItemDefaultIcon
    this.consumable = true
    this.equippable = false
    this.creatorId = creatorId
    this.createdTime = createdTime ?? game.timestamp
    this.description = description
    this.inscription = inscription
    this.stats = stats
    
    if (!this.name) {
      final r = nameGenerator.getAlchemy(1, rarity: this.rarity).first
      this.name = r.name
      this.rarity ??= r.rarity
    }
    this.id = 'item_${Hash.uid4(2)}_${this.name}'
  }
}
