import '../common.ht'
import 'common.ht'
import 'name/material_name.ht'

// 可食用的材料：谷物、蔬菜、水果、药材、溶液、鱼
// 不可食用的材料：木料、矿石、能量、灵体
struct Material {

  construct ({
    name,
    kind,
    value = 1,
    description = '',
    stackSize = 1,
  }) {
    this.entityType = kEntityTypeItem // 人物、地点、物品、技能等等
    this.category = kEntityCategoryMaterial // 武器、防护、斗技、玄功等等
    this.name = getLocaleString(name)
    this.kind = kind

    this.value = value
    this.description = description
    this.stackSize = stackSize

    this.rarity = kCommon
    this.color = kRarity[this.rarity].color

    this.id = 'resource_${this.name}'
    this.icon = 'icon/item/material/${name}.png'
  }

  construct ({
    name,
    kind,
    rarity = kCommon,
    value = 5,
    icon,
    description = '',
    stackSize = 1,
    effects,
  }) {
    this.name = name
    this.rarity = rarity
    if (!name) {
      final r = generateMaterialName(category: kind, rarity: this.rarity)
      this.name = r.name
      this.rarity ??= r.rarity
    }

    this.entityType = kEntityTypeItem // 人物、地点、物品、技能等等
    this.category = kEntityCategoryMaterial // 武器、防护、斗技、玄功等等
    this.kind = kind // 枪、剑、斧等等
    this.value = value

    this.creatorId = creatorId
    this.createdTime = createdTime

    this.description = description
    this.stackSize = stackSize
    this.color = kRarity[this.rarity].color
    this.id = this.rarity != kCommon ? 'beverage_${Hash.uid4(2)}_${this.name}' : 'beverage_${this.name}'
    this.icon = 'icon/item/consumable/drink.png'

    this.isConsumable = true
    this.effects = {}
    if (effects is {}) {
      this.effects.assign(effects)
    } else {
      this.effects[kEffectRestoreStamina] = Effect(
        id: kEffectRestoreStamina,
        description: kEffectRestoreStamina,
        category: kEffectCategoryConsume,
        values: [
          EffectValue(
            value: 80,
          ),
        ],
      )
    }
  }
}
