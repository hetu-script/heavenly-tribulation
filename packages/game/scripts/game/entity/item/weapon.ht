import '../../generator/name/name.ht' as nameGenerator
import '../constants.ht'
import 'constants.ht'
import '../../util.ht'

const _kDefaultWeaponIcon = 'icon/item/sword.png'

const _kDurabilityVariable = 100
final _kEffects = ['parry', 'counter']
const _kEffectProbabilityBase = 0.1
const _kEffectProbabilityVariable = 0.1

final kWeaponKinds = {
  // 伤害一般，耐久低，出招速度一般，收招速度快
  'sabre': {
    icon: 'icon/item/sabre.png',
    attributes: {
      speed: 10,
      durability: 200,
      damage: 30,
      criticalDamageMultiply: 4,
    },
  },
  // 伤害一般，耐久低，出招速度一般，收招速度快
  'sword': {
    icon: 'icon/item/sword.png',
    attributes: {
      speed: 10,
      durability: 200,
      damage: 30,
      criticalDamageMultiply: 3.5,
    },
  },
  // 伤害高，耐久高，出招速度一般，收招速度慢
  'axe': {
    icon: 'icon/item/axe.png',
    attributes: {
      speed: 10,
      durability: 250,
      damage: 40,
      criticalDamageMultiply: 5,
    },
  },
  // 伤害高，耐久高，出招速度一般，收招速度慢
  'helberd': {
    icon: 'icon/item/helberd.png',
    attributes: {
      speed: 15,
      durability: 300,
      damage: 50,
      criticalDamageMultiply: 5,
    },
  },
  // 伤害高，耐久高，出招速度一般，收招速度慢
  'staff': {
    icon: 'icon/item/staff.png',
    attributes: {
      speed: 12,
      durability: 300,
      damage: 12,
      criticalDamageMultiply: 1.5,
    },
  },
  'hammer': {
    icon: 'icon/item/mace.png',
    attributes: {
      speed: 20,
      durability: 400,
      damage: 25,
      criticalDamageMultiply: 3.5,
    },
  },
  'spear': {
    icon: 'icon/item/spear.png',
    attributes: {
      speed: 20,
      durability: 300,
      damage: 40,
      criticalDamageMultiply: 3.5,
    },
  },
  // 伤害低，耐久一般，出招速度快，收招速度快
  'dagger': {
    icon: 'icon/item/dagger.png',
    attributes: {
      speed: 5,
      durability: 100,
      damage: 15,
      criticalDamageMultiply: 3.5,
    },
  },
}

struct Weapon {
  construct ({
    name,
    rarity,
    value,
    icon,
    creatorId,
    createdTime,
    description,
    inscription,
    weaponKind,
    attributes,
  }) {
    this.name = name
    this.equipType = kEquipTypeOffense
    this.category = kEntityCategoryWeapon
    this.isAttackItem = true
    this.rarity = rarity
    this.value = value ?? 0
    this.consumable = false
    this.equippable = true
    this.creatorId = creatorId
    this.createdTime = createdTime
    this.description = description
    this.inscription = inscription
    this.kind = weaponKind ?? kWeaponKinds.keys.random
    this.isEquipped = false
    
    if (!this.name) {
      final r = nameGenerator.getTalisman(1, category: this.kind, rarity: this.rarity).first
      this.name = r.name
      this.rarity ??= r.rarity 
    }
    this.id = 'weapon_${Hash.uid4(2)}_${this.name}'
    
    this.kind = weaponKind ?? kWeaponKinds.keys.random

    this.icon = kWeaponKinds[this.kind].icon
    this.attributes = {
      ...kWeaponKinds[this.kind].attributes,
      effects: {},
    }

    if (attributes) {
      this.assign(attributes)
    }

    recalculateAttributesOfWeapon(this)
  }
}

fun recalculateAttributesOfWeapon(weapon) {
  weapon.stats = weapon.attributes
}
