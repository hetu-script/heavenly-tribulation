import 'constants.ht'
import 'attributes.ht'
import 'attributes/arcane.json' as arcaneAttributes

const kArcaneIconCount = 10

fun getArcanePower([rarity]) {
  rarity ??= getRarity().rarity

  final attributes = handleAttributes(arcaneAttributes,
    rarity: rarity,
    prefixNum: 1,
  )

  var maxStats = when (rarity) {
    'common' -> 6
    'uncommon' -> 6
    'rare' -> 7
    'epic' -> 7
    'legendary' -> 8
    'mythic' -> 8
    'exotic' -> 9
  }

  var strength = Math.randomInt(maxStats - 5) + 2
  var chakra = Math.randomInt(maxStats - strength - 3) + 2
  var vijnana = maxStats - strength - chakra

  final basicStatsAttributes = {}

  // final stats = []
  // stats.add(Math.randomInt(maxStats))
  // stats.add(Math.randomInt(maxStats - stats[0]))
  // stats.add(maxStats - stats[0] - stats[1])
  // stats.sort()

  // var str
  // var chi
  // var spi

  // when (attributes.explicitAttributes.first.id) {
  //   'strengthAdd' -> {
  //     str = stats[2]
  //     chi = stats[1]
  //     spi = stats[0]
  //   }
  //   'chakraAdd' -> {
  //     chi = stats[2]
  //     str = stats[1]
  //     spi = stats[0]
  //   }
  //   'vijnanaAdd' -> {
  //     spi = stats[2]
  //     str = stats[1]
  //     chi = stats[0]
  //   }
  // }

  if (strength) {
    if (strength == 1) {
      basicStatsAttributes['strengthAdd'] = {
        attributeNameId: 'strengthAddDescription',
        type: 'int',
        value: strength,
        level: 0,
        sum: 0,
      }
    } else {
      basicStatsAttributes['strengthAdd'] = {
        attributeNameId: 'strengthAddDescription',
        type: 'int',
        range: {
          min: 1,
          max: strength
        },
        level: 0,
        sum: 0,
      }
    }
  }
  if (chakra) {
    if (chakra == 1) {
      basicStatsAttributes['chakraAdd'] = {
        attributeNameId: 'chakraAddDescription',
        type: 'int',
        value: chakra,
        level: 0,
        sum: 0,
      }
    } else {
      basicStatsAttributes['chakraAdd'] = {
        attributeNameId: 'chakraAddDescription',
        type: 'int',
        range: {
          min: 1,
          max: chakra
        },
        level: 0,
        sum: 0,
      }
    }
  }
  if (vijnana) {
    if (vijnana == 1) {
      basicStatsAttributes['vijnanaAdd'] = {
        attributeNameId: 'vijnanaAddDescription',
        type: 'int',
        value: vijnana,
        level: 0,
        sum: 0,
      }
    } else {
      basicStatsAttributes['vijnanaAdd'] = {
        attributeNameId: 'vijnanaAddDescription',
        type: 'int',
        range: {
          min: 1,
          max: vijnana
        },
        level: 0,
        sum: 0,
      }
    }
  }

  final iconIndex = Math.randomInt(kArcaneIconCount)
  
  return {
    id: 'arcane_power_${Hash.uid4(2)}_${attributes.name}',
    name: attributes.name,
    icon: 'icon/skill/arcane_${iconIndex}.png',
    rarity,
    isTheorized: false,
    levelAttributes: basicStatsAttributes,
    baseAttributes: attributes.baseAttributes,
    explicitAttributes: attributes.explicitAttributes,
  }
}
