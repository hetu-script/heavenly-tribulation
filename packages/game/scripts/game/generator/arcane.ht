import 'constants.ht'
import 'attributes.ht'
import 'attributes/arcane.json' as arcaneAttributes

fun getArcanePower([rarity]) {
  rarity ??= getRarity().rarity

  final attributes = handleAttributes(arcaneAttributes,
    rarity: rarity,
    prefixNum: 1,
  )

  var maxStats = when (rarity) {
    'common' -> Math.randomInt(2) + 3
    'uncommon' -> Math.randomInt(3) + 3
    'rare' -> Math.randomInt(2) + 4
    'epic' -> Math.randomInt(3) + 4
    'legendary' -> Math.randomInt(2) + 5
    'mythic' -> Math.randomInt(1) + 6
    'exotic' -> 7
  }

  var str = Math.randomInt(maxStats)
  var chi = Math.randomInt(maxStats - str)
  var spi = maxStats - str - chi

  final basicStatsAttributes = []

  // final stats = []
  // stats.add(Math.randomInt(maxStats))
  // stats.add(Math.randomInt(maxStats - stats[0]))
  // stats.add(maxStats - stats[0] - stats[1])
  // stats.sort()

  // var str
  // var chi
  // var spi

  // when (attributes.explicitAttributes.first.id) {
  //   'strengthAdd' -> {
  //     str = stats[2]
  //     chi = stats[1]
  //     spi = stats[0]
  //   }
  //   'chiAdd' -> {
  //     chi = stats[2]
  //     str = stats[1]
  //     spi = stats[0]
  //   }
  //   'spiritAdd' -> {
  //     spi = stats[2]
  //     str = stats[1]
  //     chi = stats[0]
  //   }
  // }

  if (str) {
    if (str == 1) {
      basicStatsAttributes.add(
        {
          attributeNameId: 'strengthAddDescription',
          type: 'int',
          value: str,
          levels: [],
        }
      )
    } else {
      basicStatsAttributes.add(
        {
          attributeNameId: 'strengthAddDescription',
          type: 'int',
          range: {
            min: 1,
            max: str
          },
          levels: [],
        }
      )
    }
  }
  if (chi) {
    if (chi == 1) {
      basicStatsAttributes.add(
        {
          attributeNameId: 'chiAddDescription',
          type: 'int',
          value: chi,
          levels: [],
        }
      )
    } else {
      basicStatsAttributes.add(
        {
          attributeNameId: 'chiAddDescription',
          type: 'int',
          range: {
            min: 1,
            max: chi
          },
          levels: [],
        }
      )
    }
  }
  if (spi) {
    if (spi == 1) {
      basicStatsAttributes.add(
        {
          attributeNameId: 'spiritAddDescription',
          type: 'int',
          value: spi,
          levels: [],
        }
      )
    } else {
      basicStatsAttributes.add(
        {
          attributeNameId: 'spiritAddDescription',
          type: 'int',
          range: {
            min: 1,
            max: spi
          },
          levels: [],
        }
      )
    }
  }
  
  return {
    name: attributes.name,
    rarity,
    levelAttributes: basicStatsAttributes,
    baseAttributes: attributes.baseAttributes,
    explicitAttributes: attributes.explicitAttributes,
  }
}
