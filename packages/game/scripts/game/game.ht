external class SamsaraEngine {
  fun updateLocales(data: Map)
  fun updateZoneColors(data: Map)
  fun updateNationColors(data: Map)
  fun onIncident(data)
  fun debug(content: str)
  fun info(content: str)
  fun warning(content: str)
  fun error(content: str)
}

var buildContext

fun build(ctx) {
  buildContext = ctx
}

var engine: SamsaraEngine

var locales = {
  zh: {},
  en: {}
}

var dialogs = {}

var game = {
  timestamp: 288000,
  dialogs: {},
  mods: {},
  bindings: {},
  
  nations: {},
  characters: {},
  locations: {},
  organizations: {},
  mazes: {},
  
  incidents: [],

  monthlyActivities: {
    talked: [],
    gifted: [],
    practiced: [],
    consulted: [],
    requested: [],
    insulted: [],
    stolen: [],
    peeped: [],
  }
}

fun getMonthlyActivities {
  return game.monthlyActivities
}

var config = {
  debug: true,
}

fun getGameJsonData() {
  return game.toJson()
}

fun loadGameFromJsonData(jsonData) {
  game = prototype.fromJson(jsonData)
  updateWorldMapZoneColors()
  updateWorldMapNationColors()
}

fun getSavePath {
  return game.savePath
}

fun setSavePath(name: str) {
  game.savePath = name
}

fun onGameEvent(id: str, [arg]) {
  for (final entity of game.entities) {
    final handler = entity[id];
    if (handler is function) {
      if (entity.type == 'module') {
        final mod = getModInfo(entity.id)
        final func = handler.bind(mod)
        func(arg)
      } else {
        handler(arg)
      }
    }
  }
}

fun getTimestamp() {
  return game.timestamp
}

fun nextTick() {
  ++game.timestamp

  onGameEvent('onUpdate')
}
