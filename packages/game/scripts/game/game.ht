external class SamsaraEngine {
  fun updateLocales(data: Map)
  fun updateZoneColors(data: Map)
  fun updateNationColors(data: Map)
}

var buildContext

fun build(ctx) {
  buildContext = ctx
}

var engine: SamsaraEngine

final game = {
  debug: true,
  timestamp: 288000,
  languages: {
    zh: {},
    en: {}
  },
  dialogs: {},
  mods: {},
  entities: {},
  
  nations: {},
  characters: {},
  locations: {},
  organizations: {},
  mazes: {},
}

fun onGameEvent(id: str, [arg]) {
  for (final entity of game.entities) {
    final handler = entity[id];
    if (handler is function) {
      if (entity.type == 'module') {
        final mod = getModInfo(entity.id)
        final func = handler.bind(mod)
        func(arg)
      } else {
        handler(arg)
      }
    }
  }
}

fun nextTick() {
  ++game.timestamp

  onGameEvent('onUpdate')
}

fun getUid([n = 3]) {
  var result = ''
  for (var i in range(n)) {
    result += ((Math.random() + 1) * 0x10000).truncate().toRadixString(16).substring(1)
  }
  return result
}
