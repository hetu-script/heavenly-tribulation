external class SamsaraEngine {
  fun updateLocale(data: Map)
  fun updateZoneColors(data: Map)
  fun updateNationColors(data: Map)
  // fun onIncident(data)
  fun debug(content: str)
  fun info(content: str)
  fun warning(content: str)
  fun error(content: str)
}

var buildContext

fun build(ctx) {
  buildContext = ctx
}

var engine: SamsaraEngine

var locales = {
  zh: {},
  en: {}
}

// 全部对话资源
var dialogs = {}

// 全部 mod 列表
var mods = {}

var config = {
  debug: true,
}

var history = []

var game = {}

struct Game {
  construct {
    // 加载到本次游戏的mod信息
    this.mods = {}

    this.timestamp = 0

    this.nations = {}
    this.characters = {}
    this.babies = {}
    this.locations = {}
    this.organizations = {}
    this.mazes = {}

    // 指玩家对某个其他角色进行过的动作，限定每个月一次
    this.playerMonthly = {
      talked: [],
      gifted: [],
      practiced: [],
      consulted: [],
      requested: [],
      insulted: [],
      stolen: [],
    }

    // 指某个NPC进行过的动作，限定每个月一次
    this.characterMonthly = {
      talked: [],
      gifted: [],
      practiced: [],
      consulted: [],
      requested: [],
      insulted: [],
      stolen: [],
    }

    // 指某个组织进行过的动作，限定每个月一次
    this.organizationMonthly = {
      recruited: [],
    }

    // 指某个组织进行过的动作，限定每个月一次
    this.organizationYearly = {
      
    }
  }
}

fun resetGame {
  game = Game()
  history = []
}

fun getPlayerMonthlyActivities {
  return game.playerMonthly
}

fun getGameJsonData() {
  return game.toJson()
}

fun getHistory() {
  return history
}

fun getHistoryJsonData() {
  return jsonify(history)
}

fun loadGameFromJsonData(gameData, historyData) {
  game = prototype.fromJson(gameData)
  history = []
  
  updateWorldMapZoneColors()
  updateWorldMapNationColors()
  
  for (final data in historyData) {
    history.add(
      prototype.fromJson(data)
    )
  }

  return game.world
}

fun getSavePath {
  return game.savePath
}

fun setSavePath(name: str) {
  game.savePath = name
}

fun getTimestamp {
  return game.timestamp
}
