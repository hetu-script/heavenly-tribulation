export 'binding/engine.ht'
export 'random.ht'

/// 游戏设置，和存档无关，属于载入存档或者开始新游戏之前的全局设置
var config = {
  debug: true,
}

/// 当前副本，未进入副本时为 null
var currentMaze = null
/// 当前副本临时事件列表，平时此列表为 null
var currentMazeHistory = null

var history = []

var hero

var game

var isGameLoaded = false

fun getCurrentMazeHistory() {
  return currentMazeHistory
}

fun getHistory() {
  return history
}

fun getHistoryJsonData() {
  return jsonify(history)
}

struct Game {
  construct {
    // 本次游戏加载的 module，这里是纯数据，函数保存在另外的地方
    this.modules = {}

    this.timestamp = 0

    this.characters = {}
    this.npcs = {}
    this.babies = {}
    this.locations = {}
    this.organizations = {}
    this.mazes = {}

    // 每个月生成的暴风雨地点
    this.stormTileIndexes = []
    // 每个月生成的可捕鱼的地点
    this.fishTileIndexes = []
    
    // 游戏本身逻辑所用到的一些事件检查选项
    // 例如每个月是否进行了某个动作之类
    this.flags = {}

    resetPlayerMonthlyActivities(this)
  }
}

fun resetPlayerMonthlyActivities(gameData){
  
  // 指玩家对某个其他角色、据点、地形进行过的动作，限定每个月一次
  gameData.flags.playerCharacterMonthly = {
    talked: [],
    gifted: [],
    practiced: [],
    consulted: [],
    requested: [],
    insulted: [],
    stolen: [],
  }

  // 指玩家的组织进行过的动作，限定每个月一次
  gameData.flags.playerOrganizationMonthly = {
    recruited: [],
  }
}

fun resetGame {
  game = Game()
  history = []
  isGameLoaded = false
}

fun getModInfo(id) {
  return game.modules[id]
}

fun getPlayerMonthlyActivities {
  return game.playerCharacterMonthly
}

fun getGameJsonData() {
  return game.toJson()
}

fun loadGameFromJsonData(gameData, historyData) {
  game = prototype.fromJson(gameData)
  
  loadColors()
  
  history = []
  for (final data in historyData) {
    history.add(
      prototype.fromJson(data)
    )
  }

  isGameLoaded = true
  return game.world
}

fun getWorldId {
  return game.world.id
}

fun getSavePath {
  return game.savePath
}

fun setSavePath(name: str) {
  game.savePath = name
}

fun getTimestamp {
  return game.timestamp
}

fun addModule(module) {
  engine.info('[${module.name}] 载入模组数据')
  game.modules[module.id] = module
}
