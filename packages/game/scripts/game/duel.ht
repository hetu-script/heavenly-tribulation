import 'game.ht'
import 'l10n.ht'

/// 战斗模块
/// 输入战斗相关角色的对象
/// 生成战斗过程的文字描述，以及最终结果

external fun _showDuel(context, data: Map)

fun showDuel(log) -> Future {
  return _showDuel(buildContext, log)
}

fun _isReady(timeframe: int, speed) {
  return timeframe % speed == 0
}

// damage = ((1 / (Math.log((victim.defense + 5) / 100) + 5)) * 2 * attacker._attack)


struct Duel {
  construct(hero, enemy, { heroMoveFirst }) {
    var log = []
    var timeframe = 0

    var wielding;
    var foundedWielding = false
    for (final skill of hero.skills.equipments) {
      if (skill.category == 'fight') {
        wielding = skill
        foundedWielding = true
        break
      }
    }
    if (!foundedWielding) {
      for (final item of hero.items.equipments) {
        if (item.category == 'weapon') {
          wielding = item
          foundedWielding = true
          break
        }
      }
    }

    fun _attack(attacker, victim, wielding) {
      var damage = wielding.stats.damage - victim.stats.defense * Math.random()
      log.add(
        getLocaleString('attackInfo', [
          attacker.name,
          wielding.name,
          victim.name,
          damage.truncate(),
        ]))
      victim.stats.life -= damage
      if (victim.stats.life < 0) {
        victim.stats.life = 0
      }
    }
    
    if (foundedWielding) {
      if (heroMoveFirst == null) {
        final initiativeSum = hero.attributes.perception + enemy.attributes.perception
        final initiativeValue = initiativeSum * Math.random()
        if (hero.attributes.perception > initiativeValue) {
          log.add(getLocaleString('sneakAttack', [hero.name]))
          _attack(hero, enemy, wielding)
        } else {
          log.add(getLocaleString('sneakAttack', [enemy.name]))
          _attack(enemy, hero, wielding)
        }
      } else if (heroMoveFirst) {
        log.add(getLocaleString('sneakAttack', [hero.name]))
        _attack(hero, enemy, wielding)
      } else {
        log.add(getLocaleString('sneakAttack', [enemy.name]))
        _attack(enemy, hero, wielding)
      }

      this.result = false

      while (true) {
        ++timeframe
        if (timeframe >=1000) {
          log.add(getLocaleString('duelVictory', [enemy.name]))
          break
        }

        if (enemy.stats.life <= 0) {
          log.add(getLocaleString('duelVictory', [hero.name]))
          this.result = true
          break
        }
        
        if (hero.stats.life <= 0) {
          log.add(getLocaleString('duelVictory', [enemy.name]))
          break
        }

        for (final item of hero.items.equipments) {
          if (_isReady(timeframe, item.stats.speed)) {
            _attack(hero, enemy, item)
          }
        }

        for (final item of enemy.items.equipments) {
          if (_isReady(timeframe, item.stats.speed)) {
            _attack(enemy, hero, item)
          }
        }
      }
    } else {
      log.add(getLocaleString('failedAttackDueToEmptyHand'))
      this.result = false
    }
    
    this.log = log
  }
}
