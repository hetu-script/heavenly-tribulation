import 'shared/common.json' as commonNames
import 'shared/strange.json' as strangeNames
import 'shared/color.json' as colorPrefix
import 'shared/spirit.json' as spiritPrefix
import 'skill/skill.json' as skill
import 'skill/extra.json' as skillExtra
import 'skill/numfix.json' as skillNumfix
import 'book/prefix.json' as bookPrefix
import 'book/book.json' as book
import 'book/postfix.json' as bookPostfix
import 'spell/spell.json' as spell
import 'organization/organization.json' as organization
import 'place/place.json' as place
import 'place/prefix.json' as placePrefix
import 'place/postfix.json' as placePostfix
import 'place/location.json' as location
import 'material/material.json' as material
import '../entity/common.ht'
import '../random.ht'

namespace Name {

  final common = [
    ...commonNames.dao,
    ...commonNames.budda,
    ...commonNames.emotion,
    ...commonNames.creature,
    ...commonNames.object,
    ...commonNames.color,
    ...commonNames.place,
    ...commonNames.number,
    ...commonNames.action,
    ...commonNames.target,
  ];

  const _kBookLeft = "《";
  const _kBookRight = "》";

  fun getBook(number: int, {length, category, kind}) {
    final names = []
    for (var i in range(number)) {
      final c = category ?? random.nextIterable(skill.keys)
      final skillname = _getSkillName(length: length, category: c, kind: kind)
      var rarity = skillname.rarity
      var pre = ''
      var post = ''
      if (skillname.rarity == 'exotic') {
        pre = random.nextIterable(bookPrefix.exotic)
      } else if (skillname.rarity == 'mythic') {
        pre = random.nextIterable(bookPrefix.mythic)
      } else if (skillname.rarity == 'legendary') {
        pre = random.nextIterable(bookPrefix.legendary)
      } else if (skillname.rarity == 'epic') {
        pre = random.nextIterable(bookPrefix.epic)
      }
      if (pre) {
        post = random.nextIterable(book)
      }
      names.add({
        name: _kBookLeft + skillname.name + pre + post + _kBookRight,
        skillName: skillName.name,
        category: c,
        rarity: rarity,
      })
    }
    return names
  }

  fun getSpell(number: int) {
    final names = []
    for (var i in range(number)) {
      final name = random.nextIterable(common) + random.nextIterable(spell)
      names.add(name)
    }
    return names
  }

}