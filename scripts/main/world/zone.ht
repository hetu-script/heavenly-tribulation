const kZoneVoid = 'world'
const kZoneLand = 'land'
const kZoneSea = 'sea'
const kZoneRiver = 'river'
const kZoneCategoryContinent = 'continent'
const kZoneCategoryIsland = 'island'
const kZoneCategoryLake = 'lake'
const kZoneCategoryRiver = 'river'
const kZoneCategorySea = 'sea'

struct Zone {
  constructor ({name, category, color, map}) {
    assert(category != null)
    this.category = category
    // 这里不生成名字，而是在地图生成后，计算过zone大小之后，再根据情况生成
    this.name = name

    map ??= world
    this.id = 'zone_${map.zones.length}'
    map.zones[this.id] = this

    this.color = color ?? random.nextBrightColorHex()

    this.terrainIndexes = []
  }
}

function addTerrainToZone(terrain, world, zone) {
  if (terrain.zoneId != null) {
    const oldZone = world.zones[terrain.zoneId]
    if (oldZone != null) {
      // assert(oldZone != null, 'terrain zoneId is null, id: ${terrain.zoneId}')
      oldZone.terrainIndexes.remove(terrain.index)
    }
  }
  terrain.zoneId = zone.id
  // terrain.zoneCategory = zone.category
  zone.terrainIndexes.add(terrain.index)
}
