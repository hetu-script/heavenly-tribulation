
async function characterAnimate(battleCharacter, animation) {
  await battleCharacter.setCompositeState(
    startup: animation.startup,
    recovery: animation.recovery,
    actions: animation.actions,
    overlays: animation.overlays,
    sound: animation.sound,
  )
}

external class BattleCharacter {
  get data

  get turnFlags
  
  get life

  get lifeMax

  function setLifeMax(value: integer, {rejuvenate: bool = false})

  function addHintText(text, {color: string})

  function changeLife(value: integer, {playSound: bool = false, changeLife: bool = false})

  async function takeDamage(details) -> integer

  async function setState(state, {isOverlay = false})

  async function setCompositeState({
    startup: List,
    recovery: List,
    actions: List,
    overlays: List,
    complete: string = 'stand',
    sound: string,
  })

  function hasStatusEffect(effectId: string) -> int

  function removeStatusEffect(effectId: string, {amount: integer, percentage: float}) -> integer

  function addStatusEffect(effectId: string, {amount: integer})
}
