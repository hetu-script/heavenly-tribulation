// 原料：谷物、禽肉，兽肉，鱼肉，原木，石料，矿石草药
// 加工品：

// 材料的类型
const kMaterialMoney = 'money'
const kMaterialShard =  'shard'
const kMaterialWorker =  'worker'

const kMaterialHerb =  'herb'
const kMaterialTimber = 'timber'
const kMaterialStone = 'stone'
const kMaterialOre =   'ore'

const kMaterialKinds = [
  'money',
  'shard',
  'worker',

  'herb',
  'timber',
  'stone',
  'ore',
]

struct MaterialStorage {
  constructor {

    this.money = 0
    this.shard = 0
    this.worker = 0

    this.herb = 0
    this.timber = 0
    this.stone = 0
    this.ore = 0
  }
}

/// 材料包类物品在获得后，可以自动转化为材料数值
struct Materialpack {
  constructor ({
    id,
    kind,
    amount,
    rarity,
    price,
  }) {
    assert(kind != null)

    this.id = id ?? crypto.randomUID(withTime: true)

    this.entityType = kEntityTypeItem
    this.rarity = kRare
    this.color = kRarity[this.rarity].color
    this.name = engine.locale('${kind}_package')
    this.icon = 'item/material/${kind}.png'

    this.category = kEntityCategoryMaterial
    this.kind = kind
    this.description = engine.locale('${kind}_description')
    this.flavortext = engine.locale('materialpack_flavortext')
    this.stackSize = amount ?? 1
    this.showStack = true
    
    this.isIdentified = true
    this.isUsable = true

    if (kItemBasePriceByKind.contains(kind)) {
      this.price = kItemBasePriceByKind[kind] * this.stackSize
    }
  }
}