
// async function onUpdateItem(item) {
  // if (item.id == 'hunguding') {
  //   if (item.chargeData.current > 0) {
  //     item.chargeData.current -= 1
  //   }
  // }
// }

/// 返回 true，跳过默认交互逻辑菜单
async function onBeforeInteractCharacter(character) {
  switch(character.id) {
    'ling_chuxue': {
      if (hero.quests.mysticGirl.stage == 0) {
        Dialog.pushLocale('prelude_ling_chat', character: character)
        await Dialog.execute()
        return true
      } else if (hero.quests.nailedSoul.stage == 0) {
        Dialog.pushLocale('chapter01_ling_chat1', character: character)
        await Dialog.execute()
        return true
      }
    }
  }
  // 因为河图会默认返回最后一个表达式的值
  // 这里要显式返回以避免bug
  return
}

// 如果触发了特定对话，会提前返回
// 如果所有的匹配条件都不符合会触发默认对话
async function onInquiryQuest(character, quest) {
  if (quest == null) {
    engine.error('onInquiryQuest: quest is null')
    return
  }
  if (character.id == 'afu') {
    final afu = game.characters.afu
    switch(quest.id) {
      'rebuildWanfuzong': {
        switch(quest.stage) {
          1: {
            /// 阿福讲述万福宗的故事并希望萧墨帮助重建万福宗
            Dialog.pushLocale('chapter1_rebuildWanfuzong_afu_line2', isHero: true)
            Dialog.pushLocale('chapter1_rebuildWanfuzong_afu_line3', characterId: 'afu')
            Dialog.pushLocale('chapter1_rebuildWanfuzong_afu_line4', isHero: true)
            Dialog.pushBackground('story/cg/chapter1/wanfuzong.png', isFadeIn: true)
            Dialog.pushLocale('chapter1_rebuildWanfuzong_afu_line5', characterId: 'afu')
            Dialog.pushBackground('story/cg/chapter1/wanfuzong2.png', isFadeIn: true)
            Dialog.pushLocale('chapter1_rebuildWanfuzong_afu_line6', characterId: 'afu')
            Dialog.popBackground(image: 'story/cg/chapter1/wanfuzong.png')
            Dialog.popBackground(image: 'story/cg/chapter1/wanfuzong2.png', isFadeOut: true)
            Dialog.pushLocale('chapter1_rebuildWanfuzong_afu_line7', characterId: 'afu')
            Dialog.pushLocale('chapter1_rebuildWanfuzong_afu_line8', characterId: 'afu')
            Dialog.pushLocale('chapter1_rebuildWanfuzong_afu_line9')
            Dialog.pushLocale('chapter1_rebuildWanfuzong_afu_line10', characterId: 'afu')
            Dialog.pushLocale('chapter1_rebuildWanfuzong_afu_line11', isHero: true)
            Dialog.pushLocale('chapter1_rebuildWanfuzong_afu_line12', characterId: 'afu')
            Dialog.pushLocale('chapter1_rebuildWanfuzong_afu_line13', isHero: true)
            Dialog.pushLocale('chapter1_rebuildWanfuzong_afu_line14', characterId: 'afu')
            await Dialog.execute()
            Player.progressQuestById('rebuildWanfuzong', stage: 2)
            return
          }
          2: {
            Dialog.pushLocale('chapter1_rebuildWanfuzong_afu_line14', characterId: 'afu')
            await Dialog.execute()
            return
          }
          else: {
            // 其他情况下的默认回复
            Dialog.pushLocale('chapter1_afu_generic_reply', character: afu)
            await Dialog.execute()
            return
          }
        }
      }
      'nailedSoul': {
        /// 出示，交谈中提到魂骨钉时，触发此处代码
        switch(hero.quests.nailedSoul.stage) {
          0: {
            Player.progressQuestById('nailedSoul', stage: 1)
            Dialog.pushLocale('chapter1_afu_nail_line1')
            Dialog.pushLocale('chapter1_afu_nail_line2', characterId: 'afu')
            Dialog.pushLocale('chapter1_afu_nail_line3')
            Dialog.pushLocale('chapter1_afu_nail_line4', characterId: 'afu')
            await Dialog.execute()
            return
          }
          1: {
            if (hero.quests.rebuildWanfuzong.stage >= 2) {
              Dialog.pushLocale('chapter1_afu_nail_line5', characterId: 'afu')
              await Dialog.execute()
            } else {
              Dialog.pushLocale('chapter1_afu_nail_line6', characterId: 'afu')
              await Dialog.execute()
            }
            return
          }
          2: {
            // 魂骨钉被送给或者卖给了阿福

          }
        }
      }
    }
  }
  Dialog.pushLocale('discourse_defaultUnknown', character: character)
  Dialog.execute()
}

async function onShowItem(character, item) {
  if (character.id == 'afu') {
    if (item.id == 'hunguding') {
      assert(hero.quests.nailedSoul != null)
      await onInquiryQuest(character, hero.quests.nailedSoul)
    }
  }
}

async function onGiftItem(character, item) {
  if (character.id == 'afu') {
    if (item.id == 'hunguding') {
      Dialog.pushLocale('chapter1_afu_nail_line7_1')
      Dialog.pushLocale('chapter1_afu_nail_line7_2', characterId: 'afu')
      await Dialog.execute()
      Player.progressQuestById('nailedSoul', stage: 2)
      // 确定收下物品，返回 true
      return true
    }
  }
}

async function onEnterCultivation() {
  if (hero.quests.rebuildWanfuzong?.stage > 2 &&
      !hero.quests.rebuildWanfuzong.sequence.contains(5)) {
    Player.progressQuestById('rebuildWanfuzong', stage: 5)
    Dialog.pushLocale('chapter1_afu_initialCultivate_line4', characterId: 'afu')
    await Dialog.execute()

    final shardPack = Materialpack(kind: 'shard', amount: 4)
    Player.acquire(shardPack)
    Game.promptNewItems([shardPack])
  }
}

async function onEnterCardLibrary() {
  if (hero.quests.rebuildWanfuzong?.stage > 2 &&
      !hero.quests.rebuildWanfuzong.sequence.contains(6)) {
    Player.progressQuestById('rebuildWanfuzong', stage: 6)
    Dialog.pushLocale('chapter1_afu_initialCultivate_line5', characterId: 'afu')
    await Dialog.execute()

    final cardPack = Cardpack(
      rank: hero.rank,
      kind: 'sword',
    )
    Player.acquire(cardPack)
    Game.promptNewItems([cardPack])
  }
}

async function onAfterEnterLocation(location) {
  switch(location.id) {
    'home_ling_chuxue': {
      if (!hero.quests.sectOfCrane) {
        Player.acquireQuestById('sectOfCrane')
        final chuxue = game.characters.ling_chuxue
        Dialog.pushBackground('black.png')
        Dialog.popBackground(isFadeOut: true)
        Dialog.pushLocale('chapter1_intro_ling_chuxue_line1', character: chuxue)
        Dialog.pushLocale('chapter1_intro_ling_chuxue_line2', isHero: true)
        Dialog.pushLocale('chapter1_intro_ling_chuxue_line3', character: chuxue)
        Dialog.pushLocale('chapter1_intro_ling_chuxue_line4', isHero: true)
        Dialog.pushLocale('chapter1_intro_ling_chuxue_line5')
        Dialog.pushLocale('chapter1_intro_ling_chuxue_line6', isHero: true)
        Dialog.pushLocale('chapter1_intro_ling_chuxue_line7', character: chuxue)
        Dialog.pushLocale('chapter1_intro_ling_chuxue_line8')
        Dialog.pushLocale('chapter1_intro_ling_chuxue_line9', character: chuxue)
        Dialog.pushLocale('chapter1_intro_ling_chuxue_line10', isHero: true)
        Dialog.pushLocale('chapter1_intro_ling_chuxue_line11', character: chuxue)
        Dialog.pushLocale('chapter1_intro_ling_chuxue_line12', isHero: true)
        Dialog.pushLocale('chapter1_intro_ling_chuxue_line13', character: chuxue)
        Dialog.pushLocale('chapter1_intro_ling_chuxue_line14')
        Dialog.pushLocale('chapter1_intro_ling_chuxue_line15', character: chuxue)
        Dialog.pushLocale('chapter1_intro_ling_chuxue_line16')
        Dialog.pushLocale('chapter01_ling_chat1', character: chuxue)
        await Dialog.execute()
      }
    }
    'home_nan_wuzhen': {
      if (hero.quests.sectOfCrane.stage == 0) {
        Player.progressQuestById('sectOfCrane', stage: 1)
        final wuzhen = game.characters.nan_wuzhen
        characterMet(hero, wuzhen)
        Dialog.pushLocale('chapter1_intro_nan_wuzhen_line1', character: wuzhen)
        Dialog.pushLocale('chapter1_intro_nan_wuzhen_line2', isHero: true)
        Dialog.pushLocale('chapter1_intro_nan_wuzhen_line3', character: wuzhen)
        Dialog.pushLocale('chapter1_intro_nan_wuzhen_line4', isHero: true)
        Dialog.pushLocale('chapter1_intro_nan_wuzhen_line5', character: wuzhen, hideIllustration: true)
        Dialog.pushLocale('chapter1_intro_nan_wuzhen_line6', character: wuzhen)
        Dialog.pushLocale('chapter1_intro_nan_wuzhen_line7', isHero: true)
        Dialog.pushLocale('chapter1_intro_nan_wuzhen_line8', character: wuzhen)
        await Dialog.execute()
        addCharacterToOrganization(hero, game.organizations.baihepai)
        return true
      }
    }
  }
}
