export 'binding/battle_character.ht'
export 'binding/world.ht'
export 'cardgame/card.ht'
export 'cardgame/card_script.ht'
export 'cardgame/status_script.ht'
export 'incident.ht'
export 'entity/entity.ht'
export 'entity/character/character.ht'
export 'entity/item/item.ht'
export 'entity/item/material.ht'
export 'entity/location/location.ht'
export 'entity/organization/organization.ht'
export 'game/data.ht'
export 'game/logic.ht'
export 'game/game.ht'
export 'name/name.ht'
export 'world/tile/common.ht'
export 'world/tile/tilemap.ht'
export 'world/tile/hexagonal_tile.ht'
export 'world/world.ht'
export 'world/zone.ht'
export 'world/object.ht'
export 'colors.ht'
export 'datetime.ht'
export 'debug.ht'
export 'dialog.ht'
export 'quest.ht'
export 'event.ht'
export 'random.ht'
export 'util.ht'
export 'player.ht'
export 'common.ht'

// 这里的数据会被添加到game.mods上，并序列化为字符串进入存档
// 在游戏每次运行时，会重新将函数绑定到这个对象上
const coreModule = {
  id: 'main',
  displayName: '《天道奇劫》核心脚本',
  description: '《天道奇劫》核心脚本',
  supportedLocales: ['zh'],
  version: '0.0.1',
  flags: {}
}

/// Initialize the core script module.
/// Only run once when a new game is created
function init({
  itemsData,
  battleCardsData,
  battleCardAffixesData,
  passivesData,
}) {
  engine.debug('游戏脚本模块 [${coreModule.id}(ver-${coreModule.version})] 初始化...')

  addModuleData(coreModule)
  addItemPrototypesData(itemsData)
  addBattleCardsData(battleCardsData)
  addBattleCardAffixesData(battleCardAffixesData)
  addPassivesData(passivesData)

  // 游戏中的任务数据，任务数据在故事模块中载入
}

function addModuleData(mod) {
  assert(mod.id != null)
  // assert(game.mods.containsKey(mod.id))
  // game.mods[mod.id] ??= {}
  // Object.assign(game.mods[mod.id], mod)
  game.mods[mod.id] = mod
  engine.debug('载入模组元信息 [${mod.id}(ver-${mod.version})]')
}

/// 向 game.itemPrototypes 中添加数据
function addItemPrototypesData(itemsData) {
  for (let item of itemsData) {
    if (game.itemPrototypes.containsKey(item.prototypeId)) {
      engine.warn('预定义物品数据 id 冲突：[${item.prototypeId}]')
    }
    game.itemPrototypes[item.prototypeId] = item
  }
  engine.debug('载入预定义物品：[${itemsData.length}]')
}

/// 向 game.battleCards 中添加数据
function addBattleCardsData(cardsData) {
  for (let card of cardsData) {
    if (game.battleCards.containsKey(card.id)) {
      engine.warn('战斗卡牌主词条数据 id 冲突：[${card.id}]')
    }
    game.battleCards[card.id] = card
  }
  engine.debug('载入战斗卡牌主词条：[${cardsData.length}]')
}

/// 向 game.battleCardAffixes 中添加数据
function addBattleCardAffixesData(affixesData) {
  for (let affix of affixesData) {
    if (game.battleCardAffixes.containsKey(affix.id)) {
      engine.warn('战斗卡牌额外词条数据 id 冲突：[${affix.id}]')
    }
    game.battleCardAffixes[affix.id] = affix
  }
  engine.debug('载入战斗卡牌额外词条：[${affixesData.length}]')
}

/// 向 game.passives 中添加数据
function addPassivesData(passivesData) {
  for (let skill of passivesData) {
    if (game.passives.containsKey(skill.id)) {
      engine.warn('被动技能词条数据 id 冲突：[${skill.id}]')
    }
    game.passives[skill.id] = skill
  }
  engine.debug('载入被动技能词条：[${passivesData.length}]')
}

/// 向 game.quests 中添加数据
/// game.quests中保存的是任务原型数据
/// 实际创建任务时会重新创建，并填入本地化字符串等
function addQuestsData(questsData) {
  for (let quest of questsData) {
    if (game.quests.containsKey(quest.id)) {
      engine.warn('任务数据 id 冲突：[${quest.id}]')
    }
    game.quests[quest.id] = quest
  }
  engine.debug('载入剧情日志数据：[${questsData.length}]')
}

/// Run every time game starts
function main() {
  engine.debug('游戏脚本模块 [${coreModule.id}(ver-${coreModule.version})] 绑定事件处理函数...')

  addEventHandlers(
    moduleId: coreModule.id,
    handlers: mainEvents,
  )

  // addEventHandlers(
  //   moduleId: coreModule.id,
  //   worldId: 'main',
  //   handlers: mapEvents,
  // )
}
