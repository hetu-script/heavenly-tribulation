export 'binding/battle_character.ht'
export 'cardgame/card.ht'
export 'cardgame/card_script.ht'
export 'cardgame/status_script.ht'
export 'incident.ht'
export 'entity/entity.ht'
export 'entity/character/character.ht'
export 'entity/item/item.ht'
export 'entity/item/material.ht'
export 'entity/location/location.ht'
export 'entity/organization/organization.ht'
export 'entity/object.ht'
export 'interaction/common.ht'
export 'interaction/interaction.ht'
export 'interaction/item.ht'
export 'name/name.ht'
export 'quest/quest.ht'
export 'tile/common.ht'
export 'tile/tilemap.ht'
export 'tile/hexagonal_tile.ht'
export 'world/world.ht'
export 'world/zone.ht'
export 'colors.ht'
export 'datetime.ht'
export 'debug.ht'
export 'dialog.ht'
export 'event.ht'
export 'game.ht'
export 'random.ht'
export 'update.ht'
export 'util.ht'
export 'worldmap.ht'
export 'player.ht'
export 'common.ht'
export 'ui.ht'

const coreScriptModuleVersion = '0.0.1'

const module = {
  meta: {
    id: 'main',
    displayName: '《天道奇劫》核心脚本',
    description: '《天道奇劫》核心脚本',
    supportedLocales: ['zh'],
    version: '0.0.1',
    flags: {
      
    }
  },
}

/// Initialize the core script module.
/// Only run once when a new game is created
function init({
  itemsData,
  battleCardsData,
  battleCardAffixesData,
  passivesData,
}) {
  addModule(module.meta)
  
  // 添加材料类物品信息
  // for (let kind in kMaterialKinds) {
  //   game.items[kind] = MaterialPack(kind)
  // }
  // print(kEntityTypeItem)

  game.items = itemsData
  engine.info('载入预定义物品：[${itemsData.length}]')
  
  game.battleCardsData = battleCardsData
  game.battleCardAffixes = battleCardAffixesData
  engine.info('载入战斗卡牌词条：主词条 [${battleCardsData.length}]，额外词条 [${battleCardAffixesData.length}]')

  // game.skillTree = skillTreeData
  // game.supportSkillTree = supportSkillTreeData
  game.passives = passivesData
  engine.info('载入被动技能词条数据：词条 [${passivesData.length}]')
}

/// Run every time game starts
function main() {
  engine.info('[核心]游戏脚本(ver-${coreScriptModuleVersion})初始化...')

  addEventHandlers(
    moduleId: module.meta.id,
    worldId: null,
    handlers: mainEvents,
  )

  addEventHandlers(
    moduleId: module.meta.id,
    worldId: 'main',
    handlers: mapEvents,
  )
}
