
const cave = {
  onNewGame: async () {
    dialog.start()
    dialog.pushScene('black')
    await dialog.localeLines([
      'cave.intro.line1',
      'cave.intro.line2',
      'cave.intro.line3',
      'cave.intro.line4',
      'cave.intro.line5',
      'cave.intro.line6',
    ])
    engine.play('stone-push-37412.mp3')
    dialog.popScene('black', fadeOut: true)
    WorldMap.lightUpAroundTile(hero.worldPosition.left, hero.worldPosition.top, hero.stats.lightRadius)
    GameUI.showGameOverlay(true)
    await Future.delayed(2)
    dialog.pushImage('story/xiaomo', fadeIn: true)
    await dialog.localeLines(['cave.hero.line1'], isHero: true)
    dialog.popImage()
    await dialog.localeLines(['intro.movement'])
    dialog.end()
  },

  onInteractObject: async (object, terrain) {
    switch (object.id) {
      'coffin1': {
        if (this.flags.checkPoint1) {
          await dialog.localeLines('cave.coffin1.description2')
          return
        }
        this.flags.checkPoint1 = true

        await dialog.localeLines('cave.coffin1.description1')
        final nail = createItemById('hunguding')
        
        dialog.start()
        dialog.pushImage('story/jade_soul_dagger', fadeIn: true)
        await Future.delayed(0.8)
        await dialog.localeLines('cave.nail.description')
        await dialog.localeLines('cave.hero.line2', isHero: true)
        dialog.end()

        WorldMap.clearTerrainOverlayAnimation(6, 23)
        Player.acquire(nail)

        final portal1 = game.objects['portal1']
        assert(portal1 != null)
        portal1.useCustomInteraction = false
      }
      'coffin2': {
        dialog.localeLines('cave.coffin2.description')
      }
      'coffin3': {
        dialog.localeLines('cave.coffin3.description')
      }
      'portal1': {
        dialog.localeLines('cave.portal1.description')
      }
      // 'oldWell': {
      //   dialog.start()
      //   if (!this.flags.checkPoint2) {
      //     await dialog.localeLines('cave.oldWell.descriptionBeforeInteract2')
      //     dialog.pushImage('story/jade_soul_dagger', fadeIn: true)
      //     await Future.delayed(1)
      //     await dialog.localeLines('cave.oldWell.descriptionBeforeInteract3')
      //     await dialog.localeLines('cave.hero.line11', isHero: true)
      //     let selected = await dialog.localeSelect([
      //       'cave.oldWell.takeJade',
      //       'forgetIt',
      //     ])
      //     if (selected == 'cave.oldWell.takeJade') {
      //       await dialog.localeLines('cave.oldWell.descriptionBeforeInteract4')
      //       this.flags.checkPoint2 = true
      //       Player.acquireItemById('quest_jade')
      //       Player.gainExp(40)
      //       delete terrain.overlaySprite.animation
      //       WorldMap.updateTerrainOverlaySprite(terrain.left, terrain.top)
      //     }
      //     dialog.popImage()
      //   } else {
      //     await dialog.localeLines('cave.oldWell.descriptionAfterDrink')
      //   }
      //   dialog.end()
      // }
      // 'switch1': {
      //   if (!object?.flags.isOn) {
      //     let s = await dialog.localeSelect([
      //       'flipSwitch',
      //       'cancel',
      //     ])
      //     if (s == 'flipSwitch') {
      //       object.flags.isOn = true
      //       this.flags.switch1IsOn = true
      //       engine.play('stone-push-37412.mp3')
      //       dialog.localeLines('hint.switch', isHero: true)
      //       final switchTile = getTerrainByWorldPosition(3,19)
      //       switchTile.overlaySprite = {sprite: kSpriteDungeonLeverOn} 
      //       WorldMap.updateTerrainOverlaySprite(3,19)
            
      //       final openedRoadTile = getTerrainByWorldPosition(10,18)
      //       openedRoadTile.kind = 'plain'
      //       openedRoadTile.spriteIndex = kSpriteDungeonStonePavedTile
      //       WorldMap.updateTerrainSprite(10,18)
      //     }
      //   }
      // }
    } 
  },
}
