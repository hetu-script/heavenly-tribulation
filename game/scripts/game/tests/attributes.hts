
const _kMajorAttributeFactor = 0.5

const kCharacterAttributeNames = [
  'spirituality',
  'dexterity',
  'strength',
  'willpower',
  'perception',
]

function generateCharacterAttributes({
    attributesSum,
    minValue = 0,
    majorAttributes: List = [],
  }) {
  assert(attributesSum > 0)
  assert(minValue >= 0)

  const attributes = {}

  let maxV = attributesSum
  let residue = (attributesSum * _kMajorAttributeFactor).toInt()
  if (majorAttributes) {
    maxV = attributesSum - residue
  }
  
  let rest = attributesSum
  let list = Random().shuffle(kCharacterAttributeNames).toList()
  for (var i = 0; i < list.length - 1; ++i) {
    const value = Random().nextInt(rest)
    attributes[list[i]] = value + minValue
    rest -= value
  }
  attributes[list.last] = rest

  let majorAttrList = Random().shuffle(majorAttributes).toList()
  for (var i = 0; i < majorAttrList.length - 1; ++i) {
    const value = Random().nextInt(residue)
    attributes[majorAttrList[i]] += value
    residue -= value
  }
  attributes[majorAttrList.last] += residue
  
  return attributes
}

generateCharacterAttributes(
  attributesSum: 50,
  majorAttributes: ['strength', 'spirituality'],
)