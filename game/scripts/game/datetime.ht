import 'game.ht'
import 'l10n.ht'

const kTicksPerDay = 4 //每天的回合数 morning, afternoon, evening, night
const kDaysPerWeek = 10 //每旬的天数
const kTicksPerWeek = kDaysPerWeek * kTicksPerDay //每旬的回合数 40
const kDaysPerMonth = 30 //每月的天数
const kTicksPerMonth = kDaysPerMonth * kTicksPerDay //每月的回合数 120
const kMonthsPerYear = 12 //每年的月数
const kTicksPerYear = kMonthsPerYear * kTicksPerMonth //每年的回合数 1440

/// 当前年数
function toYear(timestamp) => (timestamp ~/ kTicksPerYear)
/// 0-11 当前月数
function toMonth(timestamp) => (timestamp % kTicksPerYear) ~/ kTicksPerMonth
/// 0-29 当前月的天数
function toDay(timestamp) => (timestamp % kTicksPerMonth) ~/ kTicksPerDay
/// 0-3 当前的时刻（清晨、下午、傍晚、午夜）
function toTime(timestamp) => (timestamp % kTicksPerDay)

function getCurrentYear => toYear(game.timestamp) + 1
function getCurrentMonth => toMonth(game.timestamp) + 1
function getCurrentDay => toDay(game.timestamp) + 1
function getCurrentTicksOfYear => (game.timestamp % kTicksPerYear)
function getCurrentTicksOfMonth => (game.timestamp % kTicksPerMonth)

const kHourString = {
  '0': 'morning',
  '1': 'afternoon',
  '2': 'evening',
  '3': 'night',
}

function getCurrentDateTimeString() {
  const d = formatDateTimeString(game.timestamp, format: 'date')
  const h = (game.timestamp % 4).toString()
  const h2 = getLocaleString(kHourString[h])
  return '${d}${h2}'
}

/// [format] = 'age' | 'date' | 'time' . 'ymd' | 'ym' | 'md' | 'd' | 'auto'
function formatDateTimeString(timestamp: int, {format: str}) {
  let yearN = toYear(timestamp)
  let monthN = toMonth(timestamp)
  let dayN = toDay(timestamp)
  
  let yearC
  let monthC
  let dayC

  const t = format?.split('.').first ?? 'date'
  if (t == 'age') {
    yearC = getLocaleString('ageYear')
    monthC = getLocaleString('ageMonth')
    dayC = getLocaleString('ageDay')
  } else if (t == 'date') {
    yearC = getLocaleString('dateYear')
    monthC = getLocaleString('dateMonth')
    dayC = getLocaleString('dateDay')
    ++yearN
    ++monthN
    ++dayN
  } else {
    yearC = getLocaleString('timeYear')
    monthC = getLocaleString('timeMonth')
    dayC = getLocaleString('timeDay')
  }

  const year = '${yearN}${yearC}'
  const month = '${monthN}${monthC}'
  const day = '${dayN}${dayC}'

  const fmt = format?.split('.').last
  switch (fmt) {
    'y' => {
      return year
    }
    'm' => {
      return month
    }
    'd' => {
      return day
    }
    'ym' => {
      return '${year}${month}'
    }
    'md' => {
      return '${month}${day}'
    }
    'ymd' => {
      return '${year}${month}${day}'
    }
    'age' => {
      if (yearN == 0) {
        if (monthN == 0) {
          return day
        } else {
          return month
        }
      } else {
        return year
      }
    }
    else => {
      return '${year}${month}${day}'
    }
  }
}

function toDateString(timestamp) => formatDateTimeString(timestamp)

function toTimeString(timestamp) => formatDateTimeString(timestamp, format: 'time.ymd')

function toAgeString(timestamp) => formatDateTimeString(timestamp, format: 'age')

function getEntityAgeString(entity) {
  return toAgeString(game.timestamp - entity.birthTimestamp)
}

function getEntityBirthDateString(entity) {
  return formatDateTimeString(game.timestamp - entity.birthTimestamp, format: 'date.md')
}

function getDayString(count) {
  assert(count > 0)
  return '${count} ${getLocaleString('timeDay')}'
}

function getMonthString(count) {
  assert(count > 0)
  return '${count} ${getLocaleString('timeMonth')}'
}

function getYearString(count) {
  assert(count > 0)
  return '${count} ${getLocaleString('timeYear')}'
}

