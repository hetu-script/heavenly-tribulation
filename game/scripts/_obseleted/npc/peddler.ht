import '../../game/entity/character/battle_entity.ht'
import '../../game/entity/common.ht'
import '../../game/entity/item/common.ht'

const _kPeddlerAttributeSum = 400

struct Peddler {
  construct ({
    birthTimestamp,
    kind,
    rarity,
    description,
    attributes,
    attributeSum,
  }) {
    this.entityType = kEntityTypeNpc
    this.birthTimestamp = birthTimestamp ?? createBirthTimestamp()
    this.icon = 'general.png'
    this.category = kEntityCategoryCharacter
    this.kind = 'peddler'
    this.name = engine.locale(this.kind)
    this.id = '${this.entityType}.${crypto.randomUID4(2)}.${this.kind}.${this.name}'
    this.rarity = kCommon
    this.color = kRarity[this.rarity].color
    game.minorCharacters[this.id] = this
    
    this.description = description ?? ''
    
    this.isEquippable = true
    this.equipType = kEquipTypeCompanion

    // 生成战斗单位相关数据，并写入当前对象
    // 不使用继承主要是因为这些数据经常会改动，直接写在这个对象上的话会更清晰
    const battleInfo = BattleEntity(attributes: attributes, attributeSum: _kPeddlerAttributeSum)
    Object.assign(this, battleInfo)

    // 装备栏由战斗单位类生成，因此下面的代码不能放在 BattleEntity 之前
    switch (this.kind) {
      'peddler' : {
        
      }
    }
    
    calculateCharacterStats(this)
  }
}
