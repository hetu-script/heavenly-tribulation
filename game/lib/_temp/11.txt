
          if (_menuPosition != null) {
            if (_heroAtTerrain != null) {
              // final terrainData = selectedTerrain.data;
              // final characters = scene.map.selectedActors;
              final tileObjectHero = scene.map.hero;
              List<int>? route;
              bool isTappingHeroPosition = false;
              if (tileObjectHero != null) {
                isTappingHeroPosition =
                    _heroAtTerrain!.tilePosition == tileObjectHero.tilePosition;
                if (!isTappingHeroPosition) {
                  final movableTerrainKinds = engine.hetu.invoke(
                      'getCharacterMovableTerrainKinds',
                      positionalArgs: [_heroData]);
                  final start = engine.hetu.invoke('getTerrainByWorldPosition',
                      positionalArgs: [
                        tileObjectHero.left,
                        tileObjectHero.top
                      ]);
                  final end = engine.hetu
                      .invoke('getTerrainByWorldPosition', positionalArgs: [
                    _heroAtTerrain!.left,
                    _heroAtTerrain!.top,
                  ]);
                  List? calculatedRoute = engine.hetu.invoke(
                    'calculateRoute',
                    positionalArgs: [start, end, scene.worldData],
                    namedArgs: {'terrainKinds': movableTerrainKinds},
                  );
                  if (calculatedRoute != null) {
                    route = List<int>.from(calculatedRoute);
                  }
                }
              }

              bool isLocationDiscovered = false;

              if ((route != null && _heroAtTerrain!.locationId != null) ||
                  (isTappingHeroPosition &&
                      _heroAtTerrain!.locationId != null)) {
                final location = engine.hetu.invoke('getLocationById',
                    positionalArgs: [_heroAtTerrain!.locationId]);
                isLocationDiscovered = location['isDiscovered'];
              }

              final genre = engine.hetu.invoke('getHeroMainGenre');

              screenWidgets.add(
                WorldMapPopup(
                  left: _menuPosition!.x - WorldMapPopup.defaultSize / 2,
                  top: _menuPosition!.y - WorldMapPopup.defaultSize / 2,
                  onPanelTapped: closePopup,
                  moveToIcon: !isTappingHeroPosition && route != null,
                  onMoveTo: () {
                    closePopup();
                    scene.map.moveObjectToTilePositionByRoute(
                      scene.map.hero!,
                      route!,
                      onAfterMoveCallback: (tile) {
                        engine.hetu.invoke('onAfterHeroMove',
                            positionalArgs: [tile.data, _currentTerrain!.data]);
                      },
                    );
                  },
                  enterIcon: isLocationDiscovered,
                  onEnter: () {
                    closePopup();
                    if (route != null) {
                      scene.map.moveObjectToTilePositionByRoute(
                          scene.map.hero!, route, onAfterMoveCallback: (tile) {
                        engine.hetu.invoke('onAfterHeroMove',
                            positionalArgs: [tile.data, _currentTerrain!.data]);
                      });
                    } else if (isTappingHeroPosition) {
                      engine.hetu.invoke('onAfterHeroMove',
                          positionalArgs: [_currentTerrain!.data]);
                    }
                  },
                  exploreIcon: (isTappingHeroPosition &&
                      _currentTerrain!.locationId == null),
                  onExplore: () {
                    closePopup();
                    engine.hetu.invoke('onHeroExplore',
                        positionalArgs: [_currentTerrain!.data]);
                  },
                  meditateIcon: isTappingHeroPosition,
                  onMeditate: () {
                    closePopup();
                    engine.hetu.invoke(
                      'onHeroMeditate',
                      namedArgs: {'terrain': _currentTerrain!.data},
                    );
                  },
                  interactIcon: isTappingHeroPosition &&
                      _currentTerrain!.locationId == null,
                  onInteract: () {
                    closePopup();
                    if (route != null) {
                      scene.map.moveObjectToTilePositionByRoute(
                          scene.map.hero!, route, onAfterMoveCallback: (tile) {
                        _interactTerrain(tile);
                      });
                    } else if (isTappingHeroPosition) {
                      _interactTerrain(_currentTerrain!);
                    }
                  },
                  // skillIcon: !isTappingHeroPosition && (genre != null),
                  onSkill: () {
                    closePopup();
                    // switch (genre) {
                    //   case 'flying_sword':
                    //     final start = scene.map.hero!.centerPosition;
                    //     final end = _currentTerrain!.centerPosition;
                    //     scene.useMapSkillFlyingSword(start, end);
                    //   case 'element':
                    //   case 'physique':
                    //   case 'vitality':
                    //   case 'avatar':
                    // }
                  },
                ),
              );
            }
          }