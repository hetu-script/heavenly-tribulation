import 'package:hetu_script/errors.dart';
import 'package:hetu_script/binding.dart';

import 'common.dart';

/// 脚本从这个类中获取常量值
class Constants extends HTExternalClass {
  Constants() : super('Constants');

  @override
  dynamic memberGet(String id,
      {String? from, bool isRecursive = false, bool ignoreUndefined = false}) {
    switch (id) {
      case 'Constants.worldSizeByScale':
        return kWorldWidthByScale;
      case 'Constants.rankToRarity':
        return kRankToRarity;
      case 'Constants.races':
        return kRaces;
      case 'Constants.raceMainAttributes':
        return kRaceMainAttributes;
      case 'Constants.baseExpGainPerLight':
        return kBaseExpGainPerLight;
      case 'Constants.baseExpCollectSpeed':
        return kBaseExpCollectSpeed;
      case 'Constants.baseMoveSpeedOnPlain':
        return kBaseMoveSpeedOnPlain;
      case 'Constants.baseMoveSpeedOnMountain':
        return kBaseMoveSpeedOnMountain;
      case 'Constants.baseMoveSpeedOnWater':
        return kBaseMoveSpeedOnWater;
      case 'Constants.baseStaminaCostOnMountain':
        return kBaseStaminaCostOnMountain;
      case 'Constants.baseStaminaCostOnWater':
        return kBaseStaminaCostOnWater;
      case 'Constants.baseCraftSkillLevel':
        return kBaseCraftSkillLevel;
      case 'Constants.baseLife':
        return kBaseLife;
      case 'Constants.baseLifePerLevel':
        return kBaseLifePerLevel;
      case 'Constants.baseLightRadius':
        return kBaseLightRadius;
      case 'Constants.baseMonthlyIdentifyCardsMax':
        return kBaseMonthlyIdentifyCardsMax;
      case 'Constants.baseResistMax':
        return kBaseResistMax;
      case 'Constants.baseTurnActionThreshold':
        return kBaseTurnActionThreshold;
      case 'Constants.maxTurnActionThreshold':
        return kMaxTurnActionThreshold;
      case 'Constants.minTurnActionThreshold':
        return kMinTurnActionThreshold;
      case 'Constants.npcIds':
        return kNpcIds;
      case 'Constants.personalities':
        return kPersonalities;
      case 'Constants.attributes':
        return kAttributes;
      case 'Constants.nonBattleAttributes':
        return kNonBattleAttributes;
      case 'Constants.battleAttributes':
        return kBattleAttributes;
      case 'Constants.attributeToGenre':
        return kAttributeToGenre;
      case 'Constants.genreToAttribute':
        return kGenreToAttribute;
      case 'Constants.attackTypes':
        return kAttackTypes;
      case 'Constants.damageTypes':
        return kDamageTypes;
      case 'Constants.sectCategories':
        return kSectCategories;
      case 'Constants.cultivationGenres':
        return kCultivationGenres;
      case 'Constants.cardpackGenres':
        return kCardpackGenres;
      case 'Constants.materialKinds':
        return kMaterialKinds;
      case 'Constants.nonCurrencyMaterialKinds':
        return kNonCurrencyMaterialKinds;
      case 'Constants.naturalResourceKinds':
        return kNaturalResourceKinds;
      case 'Constants.terrainKindToNaturalResources':
        return kTerrainKindToNaturalResources;
      case 'Constants.cultivationStyles':
        return kCultivationStyles;
      case 'Constants.locationCityKinds':
        return kLocationCityKinds;
      case 'Constants.locationSiteKinds':
        return kLocationSiteKinds;
      case 'Constants.siteKindToNpcId':
        return kSiteKindToNpcId;
      case 'Constants.siteKindsWorkable':
        return kSiteKindsWorkable;
      case 'Constants.siteKindToAttribute':
        return kSiteKindToAttribute;
      case 'Constants.siteKindsManagable':
        return kSiteKindsManagable;
      case 'Constants.siteKindsBuildable':
        return kSiteKindsBuildable;
      case 'Constants.siteKindsTradable':
        return kSiteKindsTradable;
      case 'Constants.productionSiteKinds':
        return kProductionSiteKinds;
      case 'Constants.sectCategoryToSiteKind':
        return kSectCategoryToSiteKind;
      case 'Constants.sectCategoryExpansionRate':
        return kSectCategoryExpansionRate;
      case 'Constants.sectGenreToSiteKinds':
        return kSectGenreToSiteKinds;
      case 'Constants.sitePriority':
        return kSitePriority;
      case 'Constants.ticksPerTime':
        return kTicksPerTime;
      case 'Constants.timesPerDay':
        return kTimesPerDay;
      case 'Constants.ticksPerDay':
        return kTicksPerDay;
      case 'Constants.daysPerMonth':
        return kDaysPerMonth;
      case 'Constants.ticksPerMonth':
        return kTicksPerMonth;
      case 'Constants.daysPerYear':
        return kDaysPerYear;
      case 'Constants.monthsPerYear':
        return kMonthsPerYear;
      case 'Constants.ticksPerYear':
        return kTicksPerYear;
      case 'Constants.baseBuyRate':
        return kBuyRateBase;
      case 'Constants.baseSellRate':
        return kSellRateBase;
      case 'Constants.minSellRate':
        return kMinSellRate;
      case 'Constants.minBuyRate':
        return kMinBuyRate;
      case 'Constants.materialBasePrice':
        return kMaterialPrice;
      case 'Constants.basePriceByCategory':
        return kItemPriceByCategory;
      case 'Constants.itemWithAffixCategories':
        return kItemWithAffixCategories;
      case 'Constants.terrainKindsLand':
        return kTerrainKindsLand;
      case 'Constants.terrainKindsWater':
        return kTerrainKindsWater;
      case 'Constants.terrainKindsMountain':
        return kTerrainKindsMountain;
      case 'Constants.terrainKindsAll':
        return kTerrainKindsAll;
      case 'Constants.battleCardGenreAttacks':
        return kBattleCardGenreAttacks;
      case 'Constants.battleCardGenreBuffs':
        return kBattleCardGenreBuffs;
      case 'Constants.battleCardKinds':
        return kBattleCardKinds;
      case 'Constants.titleToJobRank':
        return kTitleToJobRank;
      case 'Constants.cultivationRankToTitle':
        return kCultivationRankToTitle;
      case 'Constants.titleToAlternativeTitle':
        return kTitleToAlternativeTitle;
      case 'Constants.equipmentCategoryKinds':
        return kEquipmentCategoryKinds;
      case 'Constants.equipmentKinds':
        return kEquipmentKinds;
      case 'Constants.terrainKindToEnemyEncounterRate':
        return kTerrainKindToEnemyEncounterRate;
      case 'Constants.enemyEncounterQuests':
        return kEnemyEncounterQuests;

      default:
        if (!ignoreUndefined) throw HTError.undefined(id);
    }
  }
}
